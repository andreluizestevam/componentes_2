Type.registerNamespace("Arquitetura.Web.WebControls");

//criando construtor
Arquitetura.Web.WebControls.TFileUpload = function (element) {
    Arquitetura.Web.WebControls.TFileUpload.initializeBase(this, [element]);

    this._ShowSummary = false;
    this._AllowMultiples = false;
}

//definindo classe
Arquitetura.Web.WebControls.TFileUpload.prototype = {
    initialize: function () {
        // initialize
        Arquitetura.Web.WebControls.TFileUpload.callBaseMethod(this, 'initialize');

        // os eventos do asyncfileupload são independentes. isto e, nao utilizam a instancia.
        // desta forma, os eventos nao podem ter referencia para a esta instancia.

        // get afu
        var afu = $get(this.get_element().id + "AFU");

        // add handlers
        afu.control.add_uploadComplete(this._onUploadComplete);
        afu.control.add_uploadError(this._onUploadError);
    },
    dispose: function () {
        $clearHandlers(this.get_element());
        $clearHandlers($get(this.get_element().id + "AFU"));
        Arquitetura.Web.WebControls.TFileUpload.callBaseMethod(this, 'dispose');
    },
    // evento
    _onUploadComplete: function (sender, args) {
//        // get instance control
//        var control = $get(sender.get_element().id.replace("AFU", ""));

//        // verify if show summary
//        if (!control.getAttribute("showSummary")) {
//            return;
//        }

//        // get arguments
//        var fileName = args.get_fileName();
//        var length = (args.get_length() / 1024).toFixed(2) + " KB";
//        var contentType = args.get_contentType();

//        // get table
//        var table = $get(sender.get_element().id.replace("AFU", "TB"));

//        // create row
//        var row = table.insertRow(0);
//        //row.style.backgroundColor = sender.get_completeBackColor();

//        // create cells
//        var cell0 = row.insertCell(0);
//        cell0.style.borderBottom = "solid 1px #aaaaff";
//        cell0.style.borderRight = "solid 1px #aaaaff";
//        cell0.innerHTML = fileName;
//        cell0.title = contentType;
//        var cell1 = row.insertCell(1);
//        cell1.style.borderBottom = "solid 1px #aaaaff";
//        cell1.style.borderRight = "solid 1px #aaaaff";
//        cell1.innerHTML = length;

//        //  limpando
//        var hidden = sender.get_hiddenField();
//        hidden.value = "";

//        var input = sender.get_inputFile();
//        input.value = "";
//        input.style.backgroundColor = "white";

//        // verify if allow multiples
//        if (!control.getAttribute("allowMultiples")) {
//            input.setAttribute("disabled", true);
//        }
    },
    // evento
    _onUploadError: function (sender, args) {
        // get instance control
        var control = $get(sender.get_element().id.replace("AFU", ""));

        // build argument
        var filename = args.get_fileName();
        var filesize = args.get_length() != null ? args.get_length() : 0;
        var statusMessage = args.get_errorMessage();

        var argument = "UPLOADERROR;" + filename + ";" + filesize + ";" + statusMessage;

        // force call __doPostBack in upload error
        javascript: __doPostBack(control.id, argument);

//        // verify if show summary
//        if (!control.getAttribute("showSummary")) {
//            return;
//        }

//        // get arguments
//        var fileName = args.get_fileName();
//        var errorMessage = args.get_errorMessage();

//        // clear input
//        var input = sender.get_inputFile();
//        input.value = "";

//        // get table
//        var table = $get(sender.get_element().id.replace("AFU", "TB"));

//        // create row
//        var row = table.insertRow(0);
//        //row.style.backgroundColor = sender.get_errorBackColor();

//        // create cells
//        var cell0 = row.insertCell(0);
//        cell0.style.borderBottom = "solid 1px #aaaaff";
//        cell0.style.borderRight = "solid 1px #aaaaff";
//        cell0.innerHTML = fileName;
//        var cell1 = row.insertCell(1);
//        cell1.style.borderBottom = "solid 1px #aaaaff";
//        cell1.style.borderRight = "solid 1px #aaaaff";
//        cell1.colSpan = 2;
//        cell1.innerHTML = errorMessage;
    },
    set_ShowSummary: function (value) {
        this._ShowSummary = value;
        // pog - isso pq no evento do asyncupload nao compartilha os mesmos expandos, desta forma tem q usar o html
        this.get_element().setAttribute("showSummary", value);
    },
    get_ShowSummary: function () {
        return this._ShowSummary;
    },
    set_AllowMultiples: function (value) {
        this._AllowMultiples = value;
        // pog - isso pq no evento do asyncupload nao compartilha os mesmos expandos, desta forma tem q usar o html
        this.get_element().setAttribute("allowMultiples", value);
    },
    get_AllowMultiples: function () {
        return this._AllowMultiples;
    }
}

//register class as a Sys.Control
Arquitetura.Web.WebControls.TFileUpload.registerClass('Arquitetura.Web.WebControls.TFileUpload', Sys.UI.Control);

//notify loaded
if (typeof (Sys) !== 'undefined') {
    Sys.Application.notifyScriptLoaded();
}